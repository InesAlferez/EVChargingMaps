{"version":3,"sources":["folder.page.ts"],"names":["core_1","require","FolderPage","gmaps","renderer","actionSheetCtrl","this","center","lat","lng","markers","prototype","ngOnInit","ngAfterViewInit","loadMap","loadingGoogleMaps","googleMaps","_a","sent","mapEl","mapElementRef","nativeElement","location","LatLng","map","Map","zoom","addClass","addMarker","onMapClick","console","log","e_1","_this","mapClickListener","event","addListener","mapsMouseEvent","latLng","toJSON","icon","url","scaledSize","Size","marker","Marker","position","animation","Animation","DROP","push","markerClickListener","checkAndRemoveMarker","index","findIndex","x","setMap","splice","presentActionSheet","create","header","subHeader","buttons","text","role","data","action","present","ngOnDestroy","removeAllListeners","removeListener","__decorate","ViewChild","static","Component","selector","templateUrl","styleUrls","exports"],"mappings":"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","file":"folder.page.min.js","sourcesContent":["import { GmapsService } from './../services/gmaps.service';\nimport { Component, ElementRef, OnDestroy, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { ActionSheetController } from '@ionic/angular';\n\n@Component({\n  selector: 'app-folder',\n  templateUrl: './folder.page.html',\n  styleUrls: ['./folder.page.scss'],\n})\nexport class FolderPage implements OnInit, OnDestroy {\n\n// this gets the map element from the DOM\n@ViewChild('map', { static: true })\nmapElementRef!: ElementRef;\n// this is the google maps object\ngoogleMaps: any;\n// this is the center of the map\ncenter = { lat: 35.1850678, lng: -84.8877585 };\n// this is the map object\nmap: any;\n// this is the map click listener\nmapClickListener: any;\n// this is the marker click listener\nmarkerClickListener: any;\n// this is the array of markers\nmarkers: any[] = [];\n\n\nconstructor(\n  private gmaps: GmapsService,\n  private renderer: Renderer2,\n  private actionSheetCtrl: ActionSheetController\n) {}\n\nngOnInit(): void {\n}\n\n// this is the function that gets called when the map is ready\nngAfterViewInit() {\n  this.loadMap();\n}\n\n// this is the function that loads the map\nasync loadMap() {\n  try {\n    let googleMaps: any = await this.gmaps.loadingGoogleMaps();\n    this.googleMaps = googleMaps;\n    const mapEl = this.mapElementRef.nativeElement;\n    const location = new googleMaps.LatLng(this.center.lat, this.center.lng);\n    this.map = new googleMaps.Map(mapEl, {\n      center: location,\n      zoom: 12,\n    });\n    this.renderer.addClass(mapEl, 'visible');\n    this.addMarker(location);\n    this.onMapClick();\n  } catch(e) {\n    console.log(e);\n  }\n}\n\nonMapClick() {\n  this.mapClickListener = this.googleMaps.event.addListener(this.map, \"click\", (mapsMouseEvent: { latLng: { toJSON: () => any; }; }) => {\n    console.log(mapsMouseEvent.latLng.toJSON());\n    this.addMarker(mapsMouseEvent.latLng);\n  });\n}\n// this is the function that adds a marker to the map\naddMarker(location: any) {\n  let googleMaps: any = this.googleMaps;\n  const icon = {\n    url: 'assets/icons/location-pin.png',\n    scaledSize: new googleMaps.Size(50, 50), \n  };\n  const marker = new googleMaps.Marker({\n    position: location,\n    map: this.map,\n    icon: icon,\n    // draggable: true,\n    animation: googleMaps.Animation.DROP\n  });\n  this.markers.push(marker);\n  // this.presentActionSheet();\n  this.markerClickListener = this.googleMaps.event.addListener(marker, 'click', () => {\n    console.log('markerclick', marker);\n    this.checkAndRemoveMarker(marker);\n    console.log('markers: ', this.markers);\n  });\n}\n// this is the function that removes a marker from the map\ncheckAndRemoveMarker(marker: { position: { lat: () => any; lng: () => any; }; }) {\n  const index = this.markers.findIndex(x => x.position.lat() == marker.position.lat() && x.position.lng() == marker.position.lng());\n  console.log('is marker already: ', index);\n  if(index >= 0) {\n    this.markers[index].setMap(null);\n    this.markers.splice(index, 1);\n    return;\n  }\n}\n// this is the function that presents the action sheet\nasync presentActionSheet() {\n  const actionSheet = await this.actionSheetCtrl.create({\n    header: 'Added Marker',\n    subHeader: '',\n    buttons: [\n      {\n        text: 'Remove',\n        role: 'destructive',\n        data: {\n          action: 'delete',\n        },\n      },\n      {\n        text: 'Save',\n        data: {\n          action: 'share',\n        },\n      },\n      {\n        text: 'Cancel',\n        role: 'cancel',\n        data: {\n          action: 'cancel',\n        },\n      },\n    ],\n  });\n\n  await actionSheet.present();\n}\n\n// this is the function that gets called when the page is destroyed\nngOnDestroy() {\n  this.googleMaps.event.removeAllListeners();\n  if(this.mapClickListener) this.googleMaps.event.removeListener(this.mapClickListener);\n  if(this.markerClickListener) this.googleMaps.event.removeListener(this.markerClickListener);\n}\n}"]}